# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_model.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from custom_widgets import *
from config import *

class Ui_MainWindow(object):
    search_paths = get_search_paths()
    search_exeption_paths = get_search_exeption_paths()

    def setupUi(self, MainWindow, title: str, icon : QtGui.QIcon, size : QtCore.QRect):
        self.MainWindow = MainWindow
        self.title = title
        self.icon = icon
        self.size = size

        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowTitle(title)
        MainWindow.setFixedSize(size.width(), size.height())
        MainWindow.move(size.x(), size.y())
        MainWindow.setWindowIcon(QtGui.QIcon(icon))
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        for i in range(0, 45):
            BackgroundCode(self.centralwidget)

        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(180, 90, 461, 361))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setSizeConstraint(QtWidgets.QLayout.SetMaximumSize)
        self.verticalLayout.setContentsMargins(10, 10, 10, 10)
        self.verticalLayout.setSpacing(25)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(self.verticalLayoutWidget)
        self.widget.setObjectName("widget")
        self.comboBox = ComboBox(self.widget)
        self.comboBox.setGeometry(QtCore.QRect(50, 210, 341, 18))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(9)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.pushButton = Button(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(110, 260, 221, 23))
        font = QtGui.QFont()
        font.setFamily("Impact")
        font.setPointSize(13)
        font.setItalic(False)
        self.pushButton.setFont(font)
        self.pushButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pushButton.setObjectName("pushButton")
        self.textEdit = TextEdit(self.widget)
        self.textEdit.setGeometry(QtCore.QRect(50, 100, 341, 71))
        self.textEdit.setMaximumSize(QtCore.QSize(16777215, 100))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(9)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(50, 70, 201, 16))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(10)
        font.setBold(False)
        font.setItalic(True)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label.setAlignment(QtCore.Qt.AlignmentFlag.AlignBottom | QtCore.Qt.AlignmentFlag.AlignLeft)
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(50, 180, 121, 16))
        font = QtGui.QFont()
        font.setFamily("Sitka")
        font.setPointSize(10)
        font.setItalic(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_2.setAlignment(QtCore.Qt.AlignmentFlag.AlignBottom | QtCore.Qt.AlignmentFlag.AlignLeft)
        self.verticalLayout.addWidget(self.widget)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))    
        self.menubar.setObjectName("menubar")
        font = QtGui.QFont()
        font.setFamily("Sitka Small Semibold")
        font.setBold(True)
        font.setWeight(75)
        self.menuSearch = QtWidgets.QMenu(self.menubar)
        self.menuSearch.setObjectName("menuSearch")
        self.menuSettings = QtWidgets.QMenu(self.menubar)
        self.menuSettings.setObjectName("menuSettings")
        MainWindow.setMenuBar(self.menubar)
        self.actionAdd_search_path = QtWidgets.QAction(MainWindow)
        self.actionChange_searh_paths = QtWidgets.QAction(MainWindow)
        self.actionAdd_Search_exceptions = QtWidgets.QAction(MainWindow)
        self.actionChange_searh_exceptions = QtWidgets.QAction(MainWindow)
        self.actionSearch_Limits = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Sitka Small Semibold")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.actionAdd_search_path.setFont(font)
        self.actionChange_searh_paths.setFont(font)
        self.actionAdd_Search_exceptions.setFont(font)
        self.actionChange_searh_exceptions.setFont(font)
        self.actionSearch_Limits.setFont(font)
        self.actionAdd_search_path.setObjectName("actionAdd_search_path")
        self.actionChange_searh_paths.setObjectName("actionChange_searh_paths")
        self.actionAdd_Search_exceptions.setObjectName("actionAdd_Search_exceptions")
        self.actionChange_searh_exceptions.setObjectName("actionChange_searh_exceptions")
        self.actionSearch_Limits.setObjectName("actionSearch_Limits")
        self.actionTheme = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        font.setFamily("Sitka Small Semibold")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.actionTheme.setFont(font)
        self.actionTheme.setObjectName("actionTheme")

        self.actionAdd_search_path.triggered.connect(self.add_search_path)
        self.actionChange_searh_paths.triggered.connect(self.change_search_path)
        self.actionAdd_Search_exceptions.triggered.connect(self.add_search_exeption_path)
        self.actionChange_searh_exceptions.triggered.connect(self.change_search_exeption_paths)
        self.actionTheme.triggered.connect(self.change_theme)
        self.actionSearch_Limits.triggered.connect(self.change_search_limits)

        self.menuSearch.addAction(self.actionAdd_search_path)
        self.menuSearch.addAction(self.actionChange_searh_paths)
        self.menuSearch.addAction(self.actionAdd_Search_exceptions)
        self.menuSearch.addAction(self.actionChange_searh_exceptions)
        
        self.menuSettings.addAction(self.actionTheme)
        self.menuSettings.addAction(self.actionSearch_Limits)
        
        self.menubar.addAction(self.menuSearch.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())

        BackgroundCode.show()

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.update_styles()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.comboBox.setItemText(0, _translate("MainWindow", ".py"))
        self.comboBox.setItemText(1, _translate("MainWindow", ".cpp"))
        self.comboBox.setItemText(2, _translate("MainWindow", ".c"))
        self.comboBox.setItemText(3, _translate("MainWindow", ".js"))
        self.comboBox.setItemText(4, _translate("MainWindow", ".html"))
        self.comboBox.setItemText(5, _translate("MainWindow", ".css"))
        self.comboBox.setItemText(6, _translate("MainWindow", ".lua"))
        self.comboBox.setItemText(7, _translate("MainWindow", "any"))
        self.pushButton.setText(_translate("MainWindow", "Find"))
        self.label.setText(_translate("MainWindow", "Enter what you want to find:"))
        self.label_2.setText(_translate("MainWindow", "Choose file extension"))
        self.menuSearch.setTitle(_translate("MainWindow", "Search"))
        self.menuSettings.setTitle(_translate("MainWindow", "Settings"))
        self.actionAdd_search_path.setText(_translate("MainWindow", "Add search path"))
        self.actionChange_searh_paths.setText(_translate("MainWindow", "Edit search paths"))
        self.actionAdd_Search_exceptions.setText(_translate("MainWindow", "Add exeption path"))
        self.actionChange_searh_exceptions.setText(_translate("MainWindow", "Edit exeption paths"))
        self.actionSearch_Limits.setText(_translate("MainWindow", "Search limits"))
        self.actionTheme.setText(_translate("MainWindow", f"Theme: {get_theme()}"))
        
    def update_styles(self):
        self.MainWindow.setStyleSheet(
            f"background-color: {get_widget_style('MainWindow', 'background-color')};\n"
            f"color: {get_widget_style('MainWindow', 'color')};\n"
            f"selection-background-color: {get_widget_style('MainWindow', 'selection-background-color')};"
        )
        self.menubar.setStyleSheet(
            f"QMenuBar {{ background-color: {get_widget_style('MainWindow_MenuBar', 'background-color')}; color: {get_widget_style('MainWindow_MenuBar', 'menu-color')}; }}"
            f"QMenuBar::item:selected {{ background-color: {get_widget_style('MainWindow_MenuBar', 'selection-background-color')}; }}"
            f"QMenu::item {{ background-color: {get_widget_style('MainWindow_MenuBar', 'item-background-color')}; color: {get_widget_style('MainWindow_MenuBar', 'item-color')}; }}"
            f"QMenu::item:selected {{ background-color: {get_widget_style('MainWindow_MenuBar', 'item-selection-background-color')}; color: {get_widget_style('MainWindow_MenuBar', 'item-selection-color')}; }}"
        )    
        self.widget.setStyleSheet(
            f"background-color: {get_widget_style('MainWindow_CentralBox', 'background-color')};\n"
            "border-radius: 15px;\n"
        )
        self.label.setStyleSheet(
            f"background-color: {get_widget_style('MainWindow_TextEditLabel', 'background-color')};"
            f"color: {get_widget_style('MainWindow_TextEditLabel', 'color')};"
        )
        self.label_2.setStyleSheet(
            f"background-color: {get_widget_style('MainWindow_ComboBoxLabel', 'background-color')};"
            f"color: {get_widget_style('MainWindow_ComboBoxLabel', 'color')};"
        )
        
        self.pushButton.update_style()
        self.comboBox.update_style()
        self.textEdit.update_style()
        
        for element in BackgroundCode.elements:
            element.update_style()

    def add_search_path(self):
        path = QtWidgets.QFileDialog.getExistingDirectory(self.MainWindow, "Choose folder")
        
        if path != "":
            Ui_MainWindow.search_paths.append(path)
            save_search_paths(Ui_MainWindow.search_paths)
    def change_search_path(self):
        change_search_path_window = QtWidgets.QDialog(self.MainWindow)
        change_search_path_window.setWindowTitle("Change search path")
        change_search_path_window.setFixedSize(300, 200)

        paths = Ui_MainWindow.search_paths
        paths = "\n".join(paths)
        text_edit = QtWidgets.QTextEdit(change_search_path_window)
        text_edit.setPlainText(paths)
        text_edit.setGeometry(10, 10, 280, 180)

        layout = QtWidgets.QVBoxLayout()
        layout.addWidget(text_edit)
        change_search_path_window.setLayout(layout)

        change_search_path_window.exec_()

        text = text_edit.toPlainText()
        if paths != text:
            Ui_MainWindow.search_paths = text.split("\n")
            save_search_paths(Ui_MainWindow.search_paths)
            
    def add_search_exeption_path(self):
        path = QtWidgets.QFileDialog.getExistingDirectory(self.MainWindow, "Choose folder")
        
        if path != "":
            Ui_MainWindow.search_exeption_paths.append(path)
            save_search_exeption_paths(Ui_MainWindow.search_exeption_paths)
    
    def change_search_exeption_paths(self):
        change_search_exeptions_path_window = QtWidgets.QDialog(self.MainWindow)
        change_search_exeptions_path_window.setWindowTitle("Change search exeption paths")
        change_search_exeptions_path_window.setFixedSize(300, 200)

        paths = Ui_MainWindow.search_exeption_paths
        paths = "\n".join(paths)
        text_edit = QtWidgets.QTextEdit(change_search_exeptions_path_window)
        text_edit.setPlainText(paths)
        text_edit.setGeometry(10, 10, 280, 180)

        layout = QtWidgets.QVBoxLayout()
        layout.addWidget(text_edit)
        change_search_exeptions_path_window.setLayout(layout)

        change_search_exeptions_path_window.exec_()

        text = text_edit.toPlainText()
        if paths != text:
            Ui_MainWindow.search_exeption_paths = text.split("\n")
            save_search_exeption_paths(Ui_MainWindow.search_exeption_paths)

    def change_theme(self):
        theme_files = get_theme_files()
        current_theme_file = get_theme_file()
        current_theme_index = None
        
        for i in range(len(theme_files)):
            if current_theme_file == theme_files[i]:
                current_theme_index = i
            
        if current_theme_index != None:
            if current_theme_index >= len(theme_files) - 1:
                current_theme_index = 0
            else:
                current_theme_index += 1
                
            save_theme(theme_files[current_theme_index])
        
        self.actionTheme.setText(f"Theme: {get_theme()}")
        self.update_styles()
        
    def change_search_limits(self):
        change_search_limits_window = QtWidgets.QDialog(self.MainWindow)
        change_search_limits_window.setWindowTitle("Change search exeption paths")
        change_search_limits_window.setFixedSize(300, 500)
        
        search_limits = get_search_limits()
        if "max_results" in search_limits:
            max_results = str(search_limits["max_results"])
        else:
            max_results = "100"
        
        if "max_file_size" in search_limits:
            max_file_size = str(search_limits["max_file_size"])
        else:
            max_file_size = "20"
        
        box_style = f"QFrame {{ border: 2px solid {get_widget_style("ChangeLimitsWindow_Box", "border-color")}; border-radius: 10px; padding: 1px; background-color: {get_widget_style("ChangeLimitsWindow_Box", "background-color")}; }}"
        
        line_edits_style = f"QLineEdit {{ background-color: {get_widget_style("ChangeLimitsWindow_Edits", "background-color")}; border-radius: 10px; padding: 0px; margin: 0px; selection-color: {get_widget_style("ChangeLimitsWindow_Edits", "selection-color")}; selection-background-color: {get_widget_style("ChangeLimitsWindow_Edits", "selection-background-color")}; }}"
        
        label_style = """
            border: none;
            text-align: left;
            padding: 0px;
            margin: 0px;
        """
        
        
        box1 = QtWidgets.QFrame(change_search_limits_window)
        box1.setStyleSheet(box_style)
        
        box1_layout = QtWidgets.QVBoxLayout(box1)
        
        label_1 = QtWidgets.QLabel("Max number of results", box1)
        label_1.setStyleSheet(label_style)
        label_1.setFixedHeight(40)
        line_edit_1 = QtWidgets.QLineEdit(max_results, box1)
        line_edit_1.setStyleSheet(line_edits_style)
        line_edit_1.setFixedHeight(30)
        
        box1_layout.addWidget(label_1)
        box1_layout.addWidget(line_edit_1)
        
        box2 = QtWidgets.QFrame(change_search_limits_window)
        box2.setStyleSheet(box_style)
        
        box2_layout = QtWidgets.QVBoxLayout(box2)
        
        label_2 = QtWidgets.QLabel("Max file size(Mb)", box2)
        label_2.setStyleSheet(label_style)
        label_2.setFixedHeight(30)
        line_edit_2 = QtWidgets.QLineEdit(max_file_size, box2)
        line_edit_2.setStyleSheet(line_edits_style)
        line_edit_2.setFixedHeight(30)
        
        box2_layout.addWidget(label_2)
        box2_layout.addWidget(line_edit_2)
        
        spacer = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        
        layout = QtWidgets.QVBoxLayout()
        layout.addWidget(box1)
        layout.addWidget(box2)
        layout.addItem(spacer)
        layout.setContentsMargins(10, 10, 10, 1)
        change_search_limits_window.setLayout(layout)

        change_search_limits_window.exec_()
        
        max_results = line_edit_1.text()
        max_file_size = line_edit_2.text()
        
        try:
            search_limits["max_results"] = int(max_results)
        except ValueError:
            pass
        try:
            search_limits["max_file_size"] = int(max_file_size)
        except ValueError:
            pass
        
        save_search_limits(search_limits)